[
    {
        "id": "4af76810b44ec470",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "2c6873d2.992abc",
        "type": "mqtt out",
        "z": "4af76810b44ec470",
        "name": "",
        "topic": "Patient_Monitor_2022/NodeRedtest/",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "8317dfc5b8f4bd6d",
        "x": 590,
        "y": 140,
        "wires": []
    },
    {
        "id": "8640b8ff.f82ff8",
        "type": "debug",
        "z": "4af76810b44ec470",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 200,
        "wires": []
    },
    {
        "id": "be80048.8f232f8",
        "type": "mqtt in",
        "z": "4af76810b44ec470",
        "name": "",
        "topic": "Patient_Monitor_2022/#",
        "qos": "0",
        "datatype": "auto",
        "broker": "8317dfc5b8f4bd6d",
        "nl": false,
        "rap": false,
        "inputs": 0,
        "x": 160,
        "y": 200,
        "wires": [
            [
                "8640b8ff.f82ff8"
            ]
        ]
    },
    {
        "id": "eb42141e286017e9",
        "type": "inject",
        "z": "4af76810b44ec470",
        "name": "TS- ms",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "2",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "HelloWorld",
        "payload": "{\"bn\":\"p_dummy/s_dummy\",\"e\":{\"n\":\"NodeRed\",\"value\":0,\"timestamp\":0,\"unit\":\"%\"}}",
        "payloadType": "json",
        "x": 140,
        "y": 140,
        "wires": [
            [
                "2c6873d2.992abc"
            ]
        ]
    },
    {
        "id": "f6f91db3d3960dd6",
        "type": "function",
        "z": "4af76810b44ec470",
        "name": "",
        "func": "// Create a Date object from the payload\nvar ts = new Date(msg.payload);\n// Change the payload to be a formatted Date string\nvar massage = `{\n           'bn' : \"0\",\n           'e' : {'n': 'nodeRed', 'value': '0', 'timestamp': '0', 'unit': '0'}, ,\n           }`;\n// Return the message so it can be sent on\nmsg.payload = massage;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "8317dfc5b8f4bd6d",
        "type": "mqtt-broker",
        "name": "",
        "broker": "test.mosquitto.org",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    }
]